@inject IContentServiceAddress _contentServiceAddress
<Container>
    <Form Margin="Margin.Is2.OnX">
        <Validations @ref="fluentValidations" Mode="ValidationMode.Manual" Model="@orderViewModelDto" HandlerType="typeof(FluentValidationHandler)">
            <Row>
                <Column ColumnSize="ColumnSize.IsFull">
                    <Validations>
                        <Field>
                            <FieldLabel RequiredIndicator><Strong>@orderParametersList[0]</Strong></FieldLabel>
                            <TextEdit Role="TextRole.Text" Placeholder="Как к вам обрщаться?" @bind-Text="orderViewModelDto.Name">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validations>
                </Column>
            </Row>
            <Row>
                <Column ColumnSize="ColumnSize.IsThird">
                    <Validation>
                        <Field>
                            <FieldLabel RequiredIndicator><Strong>@orderParametersList[1]</Strong></FieldLabel>
                            <TextEdit Role="TextRole.Telephone" Placeholder="+7-000-000-00-00" @bind-Text="orderViewModelDto.MessageNumber">
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                </Column>
                <Column ColumnSize="ColumnSize.IsThird">
                    <Field>
                        <FieldLabel><Strong>@orderParametersList[2]</Strong></FieldLabel>
                        <TextEdit Role="TextRole.Telephone" Placeholder="+7-000-000-00-00" @bind-Text="orderViewModelDto.MessageNumber">
                        </TextEdit>
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.IsThird">
                    <Field>
                        <FieldLabel><Strong>@orderParametersList[3]</Strong></FieldLabel>
                        <TextEdit Role="TextRole.Email" Placeholder="Ваш адрес электронной почты" @bind-Text="orderViewModelDto.Email">
                        </TextEdit>
                    </Field>
                </Column>
            </Row>
        </Validations>
        <Row>
            @* <Column ColumnSize="ColumnSize.IsThird">
                <Field>
                    <FieldLabel RequiredIndicator><Strong>@orderParametersList[7]</Strong></FieldLabel>
                    <Select TValue="int" SelectedValue="1" SelectedValueChanged="GetDistrictAsync">
                        <SelectItem Value="1" Disabled="true" >Выберите край/область...</SelectItem>
                        <SelectItem Value="2">Ставропольский край</SelectItem>
                    </Select>
                </Field>
            </Column> *@
            <Column ColumnSize="ColumnSize.IsThird">
                <Field>
                    <FieldLabel RequiredIndicator><Strong>@orderParametersList[8]</Strong></FieldLabel>
                    <Select TValue="int" SelectedValue="1">
                        <SelectItem Value="1" Disabled="true">Выберите район/округ/городской округ...</SelectItem>
                        @* Сделать запрос к бд *@
                        <SelectItem Value="2">Ставропольский край</SelectItem>
                    </Select>
                </Field>
            </Column>
            <Column ColumnSize="ColumnSize.IsThird">
                <Field>
                    <FieldLabel RequiredIndicator><Strong>@orderParametersList[9]</Strong></FieldLabel>
                    <Select TValue="int" SelectedValue="1">
                        <SelectItem Value="1" Disabled="true">Выберите населенный пункт...</SelectItem>
                        @* Сделать запрос к бд *@
                        <SelectItem Value="2">Ставропольский край</SelectItem>
                    </Select>
                </Field>
            </Column>
        </Row>
    </Form>
</Container>

@code {
    OrderViewModelDto orderViewModelDto = new();
    Validations fluentValidations;
    List<string> orderParametersList { get; set; }
    int selectedDistrict;
    List<string> ttt=new();
    protected override async Task OnInitializedAsync()
    {
        orderParametersList = typeof(OrderViewModelDto).GetProperties().Where(p => p.PropertyType != typeof(Dto.AddressDto) && p.PropertyType != typeof(Boolean)).Select(p => p.Name)
            .Select(p => orderViewModelDto.GetType().GetProperty(p)!.GetCustomAttribute<DisplayAttribute>()!.Name!).ToList();
        orderParametersList.AddRange(typeof(AddressDto).GetProperties().Select(p => p.Name)
            .Select(p => orderViewModelDto.AddressData!.GetType().GetProperty(p)!.GetCustomAttribute<DisplayAttribute>()!.Name!).ToList());
        ttt =await _contentServiceAddress.GetPartOfAddress("District");
    }

    // protected async Task GetDistrictAsync()
    // {
    //     var test=
    // }
}
