// <auto-generated />
using System;
using CompanyProjectCardsService.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CompanyProjectCardsService.Migrations
{
    [DbContext(typeof(CompanyProjectCardDbContext))]
    partial class CompanyProjectCardDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CompanyProjectCardsService.Model.CardFooterItem", b =>
                {
                    b.Property<Guid>("CardFooterItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CardFooterItemContent")
                        .HasColumnType("text");

                    b.Property<bool>("CardFooterItemIsLink")
                        .HasColumnType("boolean");

                    b.Property<string>("CardFooterItemLinkAction")
                        .HasColumnType("text");

                    b.Property<string>("CardFooterItemLinkController")
                        .HasColumnType("text");

                    b.Property<Guid?>("MainCardId")
                        .HasColumnType("uuid");

                    b.HasKey("CardFooterItemId");

                    b.HasIndex("MainCardId");

                    b.ToTable("CardFooterItem");

                    b.HasData(
                        new
                        {
                            CardFooterItemId = new Guid("eb550533-7e69-4850-9528-030a2ad3f209"),
                            CardFooterItemIsLink = false
                        });
                });

            modelBuilder.Entity("CompanyProjectCardsService.Model.MainCard", b =>
                {
                    b.Property<Guid>("MainCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string[]>("CardContent")
                        .HasColumnType("text[]");

                    b.Property<bool>("CardHasFooter")
                        .HasColumnType("boolean");

                    b.Property<bool>("CardHasHeader")
                        .HasColumnType("boolean");

                    b.Property<bool>("CardHasImage")
                        .HasColumnType("boolean");

                    b.Property<string[]>("CardHeaderContent")
                        .HasColumnType("text[]");

                    b.Property<string>("CardHeaderIcon")
                        .HasColumnType("text");

                    b.Property<bool>("CardHeaderIsLink")
                        .HasColumnType("boolean");

                    b.Property<string>("CardHeaderLinkAction")
                        .HasColumnType("text");

                    b.Property<string>("CardHeaderLinkController")
                        .HasColumnType("text");

                    b.Property<string>("CardImage")
                        .HasColumnType("text");

                    b.Property<bool>("CardIsLink")
                        .HasColumnType("boolean");

                    b.Property<string>("CardLinkAction")
                        .HasColumnType("text");

                    b.Property<string>("CardLinkController")
                        .HasColumnType("text");

                    b.Property<string>("PageNameForCard")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MainCardId");

                    b.ToTable("MainCards");

                    b.HasData(
                        new
                        {
                            MainCardId = new Guid("ec1c1d43-45d6-4c0b-99cf-bb410ed8b3be"),
                            CardContent = new[] { "Image_ComputersRepair.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Ремонт компьютеров" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "ComputersRepair",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        },
                        new
                        {
                            MainCardId = new Guid("ff51059b-dd49-438f-89e0-50329ff1e9ab"),
                            CardContent = new[] { "Image_LaptopsRepair.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Ремонт ноутбуков" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "LaptopsRepair",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        },
                        new
                        {
                            MainCardId = new Guid("b35fc5ec-5873-4937-9b8c-0aee5bbf1549"),
                            CardContent = new[] { "Image_HelpDesk.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Компьютерная помощь" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "HelpDesk",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        },
                        new
                        {
                            MainCardId = new Guid("da218596-e949-47ae-9eec-5adeca9642b0"),
                            CardContent = new[] { "Image_InternetNetworks.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Интернет и сети" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "InternetNetworks",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        },
                        new
                        {
                            MainCardId = new Guid("3afb5150-3bb6-4196-8f28-235ca9d27f0f"),
                            CardContent = new[] { "Image_DataRecovery.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Восстановление данных" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "DataRecovery",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        },
                        new
                        {
                            MainCardId = new Guid("ac0f78c6-7ab0-4489-9da4-a9ecf93b2828"),
                            CardContent = new[] { "Image_B2b.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "ИТ-услуги для бизнеса" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "B2b",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        },
                        new
                        {
                            MainCardId = new Guid("4d10ea4e-3bbc-4b60-8946-ab26e0afdd0f"),
                            CardContent = new[] { "Image_LaptopUpgrade.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Модернизация ноутбука" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "LaptopUpgrade",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        },
                        new
                        {
                            MainCardId = new Guid("9511c1d1-9ae9-419b-8435-01cc816ac4a6"),
                            CardContent = new[] { "Image_PcAssembly.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Сборка компьютера" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "PcAssembly",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        });
                });

            modelBuilder.Entity("CompanyProjectCardsService.Model.CardFooterItem", b =>
                {
                    b.HasOne("CompanyProjectCardsService.Model.MainCard", null)
                        .WithMany("CardFooterItems")
                        .HasForeignKey("MainCardId");
                });

            modelBuilder.Entity("CompanyProjectCardsService.Model.MainCard", b =>
                {
                    b.Navigation("CardFooterItems");
                });
#pragma warning restore 612, 618
        }
    }
}
