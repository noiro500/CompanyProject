// <auto-generated />
using System;
using CompanyProjectCardsService.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CompanyProjectCardsService.Migrations
{
    [DbContext(typeof(CompanyProjectCardDbContext))]
    partial class CompanyProjectCardDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CompanyProjectCardsService.Model.CardFooterItem", b =>
                {
                    b.Property<Guid>("CardFooterItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CardFooterItemContent")
                        .HasColumnType("text");

                    b.Property<bool>("CardFooterItemIsLink")
                        .HasColumnType("boolean");

                    b.Property<string>("CardFooterItemLinkAction")
                        .HasColumnType("text");

                    b.Property<string>("CardFooterItemLinkController")
                        .HasColumnType("text");

                    b.Property<Guid?>("MainCardId")
                        .HasColumnType("uuid");

                    b.HasKey("CardFooterItemId");

                    b.HasIndex("MainCardId");

                    b.ToTable("CardFooterItem");

                    b.HasData(
                        new
                        {
                            CardFooterItemId = new Guid("d1686e4d-6ae2-4d5d-84cf-067a363ffa65"),
                            CardFooterItemIsLink = false
                        });
                });

            modelBuilder.Entity("CompanyProjectCardsService.Model.MainCard", b =>
                {
                    b.Property<Guid>("MainCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string[]>("CardContent")
                        .HasColumnType("text[]");

                    b.Property<bool>("CardHasFooter")
                        .HasColumnType("boolean");

                    b.Property<bool>("CardHasHeader")
                        .HasColumnType("boolean");

                    b.Property<bool>("CardHasImage")
                        .HasColumnType("boolean");

                    b.Property<string[]>("CardHeaderContent")
                        .HasColumnType("text[]");

                    b.Property<string>("CardHeaderIcon")
                        .HasColumnType("text");

                    b.Property<bool>("CardHeaderIsLink")
                        .HasColumnType("boolean");

                    b.Property<string>("CardHeaderLinkAction")
                        .HasColumnType("text");

                    b.Property<string>("CardHeaderLinkController")
                        .HasColumnType("text");

                    b.Property<string>("CardImage")
                        .HasColumnType("text");

                    b.Property<bool>("CardIsLink")
                        .HasColumnType("boolean");

                    b.Property<string>("CardLinkAction")
                        .HasColumnType("text");

                    b.Property<string>("CardLinkController")
                        .HasColumnType("text");

                    b.Property<string>("PageNameForCard")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MainCardId");

                    b.HasIndex("PageNameForCard");

                    b.ToTable("MainCards");

                    b.HasData(
                        new
                        {
                            MainCardId = new Guid("660663db-c6de-4161-93c7-00c6ffeb29a6"),
                            CardContent = new[] { "ComputersRepair.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Ремонт компьютеров" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "ComputersRepair",
                            CardLinkController = "Home",
                            PageNameForCard = "index"
                        },
                        new
                        {
                            MainCardId = new Guid("94010429-5c8e-4ff2-b1a3-f2d0b8e59bf0"),
                            CardContent = new[] { "LaptopsRepair.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Ремонт ноутбуков" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "LaptopsRepair",
                            CardLinkController = "Home",
                            PageNameForCard = "index"
                        },
                        new
                        {
                            MainCardId = new Guid("7e304405-ccca-4477-a572-cbb95771e6e7"),
                            CardContent = new[] { "HelpDesk.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Компьютерная помощь" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "HelpDesk",
                            CardLinkController = "Home",
                            PageNameForCard = "index"
                        },
                        new
                        {
                            MainCardId = new Guid("01f679e5-07af-464e-b761-5a480344ad4e"),
                            CardContent = new[] { "InternetNetworks.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Интернет и сети" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "InternetNetworks",
                            CardLinkController = "Home",
                            PageNameForCard = "index"
                        },
                        new
                        {
                            MainCardId = new Guid("11fb093c-7ffd-45ed-b55e-a0fa1fe6b73e"),
                            CardContent = new[] { "DataRecovery.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Восстановление данных" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "DataRecovery",
                            CardLinkController = "Home",
                            PageNameForCard = "index"
                        },
                        new
                        {
                            MainCardId = new Guid("50116b54-4127-435d-9577-8eb4675434f6"),
                            CardContent = new[] { "B2b.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "ИТ-услуги для бизнеса" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "B2b",
                            CardLinkController = "Home",
                            PageNameForCard = "index"
                        },
                        new
                        {
                            MainCardId = new Guid("9756643a-e4c5-40ad-aca4-5a04feee0e1f"),
                            CardContent = new[] { "LaptopUpgrade.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Модернизация ноутбука" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "LaptopUpgrade",
                            CardLinkController = "Home",
                            PageNameForCard = "index"
                        },
                        new
                        {
                            MainCardId = new Guid("206f086c-562e-482b-b7b3-f223d0efe18d"),
                            CardContent = new[] { "PcAssembly.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Сборка компьютера" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "PcAssembly",
                            CardLinkController = "Home",
                            PageNameForCard = "index"
                        });
                });

            modelBuilder.Entity("CompanyProjectCardsService.Model.CardFooterItem", b =>
                {
                    b.HasOne("CompanyProjectCardsService.Model.MainCard", null)
                        .WithMany("CardFooterItems")
                        .HasForeignKey("MainCardId");
                });

            modelBuilder.Entity("CompanyProjectCardsService.Model.MainCard", b =>
                {
                    b.Navigation("CardFooterItems");
                });
#pragma warning restore 612, 618
        }
    }
}
