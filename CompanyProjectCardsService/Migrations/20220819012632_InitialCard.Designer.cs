// <auto-generated />
using System;
using CompanyProjectCardsService.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CompanyProjectCardsService.Migrations
{
    [DbContext(typeof(CompanyProjectCardDbContext))]
    [Migration("20220819012632_InitialCard")]
    partial class InitialCard
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CompanyProjectCardsService.Model.CardFooterItem", b =>
                {
                    b.Property<Guid>("CardFooterItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CardFooterItemContent")
                        .HasColumnType("text");

                    b.Property<bool>("CardFooterItemIsLink")
                        .HasColumnType("boolean");

                    b.Property<string>("CardFooterItemLinkAction")
                        .HasColumnType("text");

                    b.Property<string>("CardFooterItemLinkController")
                        .HasColumnType("text");

                    b.Property<Guid?>("MainCardId")
                        .HasColumnType("uuid");

                    b.HasKey("CardFooterItemId");

                    b.HasIndex("MainCardId");

                    b.ToTable("CardFooterItem");

                    b.HasData(
                        new
                        {
                            CardFooterItemId = new Guid("b562c9b0-6a99-4a82-b796-a8bd7fbeb2d9"),
                            CardFooterItemIsLink = false
                        });
                });

            modelBuilder.Entity("CompanyProjectCardsService.Model.MainCard", b =>
                {
                    b.Property<Guid>("MainCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string[]>("CardContent")
                        .HasColumnType("text[]");

                    b.Property<bool>("CardHasFooter")
                        .HasColumnType("boolean");

                    b.Property<bool>("CardHasHeader")
                        .HasColumnType("boolean");

                    b.Property<bool>("CardHasImage")
                        .HasColumnType("boolean");

                    b.Property<string[]>("CardHeaderContent")
                        .HasColumnType("text[]");

                    b.Property<string>("CardHeaderIcon")
                        .HasColumnType("text");

                    b.Property<bool>("CardHeaderIsLink")
                        .HasColumnType("boolean");

                    b.Property<string>("CardHeaderLinkAction")
                        .HasColumnType("text");

                    b.Property<string>("CardHeaderLinkController")
                        .HasColumnType("text");

                    b.Property<string>("CardImage")
                        .HasColumnType("text");

                    b.Property<bool>("CardIsLink")
                        .HasColumnType("boolean");

                    b.Property<string>("CardLinkAction")
                        .HasColumnType("text");

                    b.Property<string>("CardLinkController")
                        .HasColumnType("text");

                    b.Property<string>("PageNameForCard")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MainCardId");

                    b.HasIndex("PageNameForCard");

                    b.ToTable("MainCards");

                    b.HasData(
                        new
                        {
                            MainCardId = new Guid("d4e3f3e2-737a-40c2-8d90-70bd4e1db161"),
                            CardContent = new[] { "ComputersRepair.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Ремонт компьютеров" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "ComputersRepair",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        },
                        new
                        {
                            MainCardId = new Guid("54a49128-67ce-4a96-ab1d-130eba60d103"),
                            CardContent = new[] { "LaptopsRepair.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Ремонт ноутбуков" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "LaptopsRepair",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        },
                        new
                        {
                            MainCardId = new Guid("da56262f-7e59-4ab5-a5b7-a5d30f491c7d"),
                            CardContent = new[] { "HelpDesk.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Компьютерная помощь" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "HelpDesk",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        },
                        new
                        {
                            MainCardId = new Guid("5fd1ac9a-1804-46ea-852e-43add5b296b0"),
                            CardContent = new[] { "InternetNetworks.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Интернет и сети" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "InternetNetworks",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        },
                        new
                        {
                            MainCardId = new Guid("bd37250c-2559-4658-8d0f-907dd5f5c62e"),
                            CardContent = new[] { "DataRecovery.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Восстановление данных" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "DataRecovery",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        },
                        new
                        {
                            MainCardId = new Guid("4032986d-f4b7-4237-880a-694836aa56d1"),
                            CardContent = new[] { "B2b.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "ИТ-услуги для бизнеса" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "B2b",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        },
                        new
                        {
                            MainCardId = new Guid("9165b85d-a41f-483d-81d5-99c2933419aa"),
                            CardContent = new[] { "LaptopUpgrade.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Модернизация ноутбука" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "LaptopUpgrade",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        },
                        new
                        {
                            MainCardId = new Guid("254c77f0-d88e-4b95-bf48-e5f2b654a50b"),
                            CardContent = new[] { "PcAssembly.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Сборка компьютера" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "PcAssembly",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        });
                });

            modelBuilder.Entity("CompanyProjectCardsService.Model.CardFooterItem", b =>
                {
                    b.HasOne("CompanyProjectCardsService.Model.MainCard", null)
                        .WithMany("CardFooterItems")
                        .HasForeignKey("MainCardId");
                });

            modelBuilder.Entity("CompanyProjectCardsService.Model.MainCard", b =>
                {
                    b.Navigation("CardFooterItems");
                });
#pragma warning restore 612, 618
        }
    }
}
