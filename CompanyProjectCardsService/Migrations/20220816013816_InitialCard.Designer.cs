// <auto-generated />
using System;
using CompanyProjectCardsService.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CompanyProjectCardsService.Migrations
{
    [DbContext(typeof(CompanyProjectCardDbContext))]
    [Migration("20220816013816_InitialCard")]
    partial class InitialCard
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CompanyProjectCardsService.Model.CardFooterItem", b =>
                {
                    b.Property<int>("CardFooterItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CardFooterItemId"));

                    b.Property<string>("CardFooterItemContent")
                        .HasColumnType("text");

                    b.Property<bool>("CardFooterItemIsLink")
                        .HasColumnType("boolean");

                    b.Property<string>("CardFooterItemLinkAction")
                        .HasColumnType("text");

                    b.Property<string>("CardFooterItemLinkController")
                        .HasColumnType("text");

                    b.Property<int>("MainCardId")
                        .HasColumnType("integer");

                    b.HasKey("CardFooterItemId");

                    b.HasIndex("MainCardId");

                    b.ToTable("CardFooterItem");

                    b.HasData(
                        new
                        {
                            CardFooterItemId = 1,
                            CardFooterItemIsLink = false,
                            MainCardId = 1
                        });
                });

            modelBuilder.Entity("CompanyProjectCardsService.Model.MainCard", b =>
                {
                    b.Property<int>("MainCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MainCardId"));

                    b.Property<string[]>("CardContent")
                        .HasColumnType("text[]");

                    b.Property<bool>("CardHasFooter")
                        .HasColumnType("boolean");

                    b.Property<bool>("CardHasHeader")
                        .HasColumnType("boolean");

                    b.Property<bool>("CardHasImage")
                        .HasColumnType("boolean");

                    b.Property<string[]>("CardHeaderContent")
                        .HasColumnType("text[]");

                    b.Property<string>("CardHeaderIcon")
                        .HasColumnType("text");

                    b.Property<bool>("CardHeaderIsLink")
                        .HasColumnType("boolean");

                    b.Property<string>("CardHeaderLinkAction")
                        .HasColumnType("text");

                    b.Property<string>("CardHeaderLinkController")
                        .HasColumnType("text");

                    b.Property<string>("CardImage")
                        .HasColumnType("text");

                    b.Property<bool>("CardIsLink")
                        .HasColumnType("boolean");

                    b.Property<string>("CardLinkAction")
                        .HasColumnType("text");

                    b.Property<string>("CardLinkController")
                        .HasColumnType("text");

                    b.Property<string>("PageNameForCard")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MainCardId");

                    b.ToTable("MainCards");

                    b.HasData(
                        new
                        {
                            MainCardId = 1,
                            CardContent = new[] { "Image_ComputersRepair.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Ремонт компьютеров" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "ComputersRepair",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        },
                        new
                        {
                            MainCardId = 2,
                            CardContent = new[] { "Image_LaptopsRepair.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Ремонт ноутбуков" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "LaptopsRepair",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        },
                        new
                        {
                            MainCardId = 3,
                            CardContent = new[] { "Image_HelpDesk.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Компьютерная помощь" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "HelpDesk",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        },
                        new
                        {
                            MainCardId = 4,
                            CardContent = new[] { "Image_InternetNetworks.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Интернет и сети" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "InternetNetworks",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        },
                        new
                        {
                            MainCardId = 5,
                            CardContent = new[] { "Image_DataRecovery.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Восстановление данных" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "DataRecovery",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        },
                        new
                        {
                            MainCardId = 6,
                            CardContent = new[] { "Image_B2b.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "ИТ-услуги для бизнеса" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "B2b",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        },
                        new
                        {
                            MainCardId = 7,
                            CardContent = new[] { "Image_LaptopUpgrade.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Модернизация ноутбука" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "LaptopUpgrade",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        },
                        new
                        {
                            MainCardId = 8,
                            CardContent = new[] { "Image_PcAssembly.png" },
                            CardHasFooter = false,
                            CardHasHeader = true,
                            CardHasImage = false,
                            CardHeaderContent = new[] { "Сборка компьютера" },
                            CardHeaderIsLink = false,
                            CardIsLink = true,
                            CardLinkAction = "PcAssembly",
                            CardLinkController = "Home",
                            PageNameForCard = "Index"
                        });
                });

            modelBuilder.Entity("CompanyProjectCardsService.Model.CardFooterItem", b =>
                {
                    b.HasOne("CompanyProjectCardsService.Model.MainCard", "MainCard")
                        .WithMany("CardFooterItems")
                        .HasForeignKey("MainCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainCard");
                });

            modelBuilder.Entity("CompanyProjectCardsService.Model.MainCard", b =>
                {
                    b.Navigation("CardFooterItems");
                });
#pragma warning restore 612, 618
        }
    }
}
