// <auto-generated />
using System;
using CompanyProjectCardsService.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CompanyProjectCardsService.Migrations
{
    [DbContext(typeof(CompanyProjectCardDbContext))]
    [Migration("20220809232724_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CompanyProjectCardsService.Model.Card", b =>
                {
                    b.Property<Guid>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CardContent")
                        .HasColumnType("text");

                    b.Property<bool>("CardHasFooter")
                        .HasColumnType("boolean");

                    b.Property<bool>("CardHasHeader")
                        .HasColumnType("boolean");

                    b.Property<string>("CardImage")
                        .HasColumnType("text");

                    b.Property<bool>("CardIsLink")
                        .HasColumnType("boolean");

                    b.Property<string>("CardLinkAddress")
                        .HasColumnType("text");

                    b.Property<string>("PageNameForCard")
                        .HasColumnType("text");

                    b.HasKey("CardId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("CompanyProjectCardsService.Model.CardFooter", b =>
                {
                    b.Property<Guid>("CardFooterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CardFooterForeignKey")
                        .HasColumnType("uuid");

                    b.HasKey("CardFooterId");

                    b.HasIndex("CardFooterForeignKey")
                        .IsUnique();

                    b.ToTable("CardFooter");
                });

            modelBuilder.Entity("CompanyProjectCardsService.Model.CardFooterItem", b =>
                {
                    b.Property<Guid>("CardFooterItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CardFooterId")
                        .HasColumnType("uuid");

                    b.Property<string>("CardFooterItemContent")
                        .HasColumnType("text");

                    b.Property<bool>("CardFooterItemIsLink")
                        .HasColumnType("boolean");

                    b.Property<string>("CardFooterItemLinkAddress")
                        .HasColumnType("text");

                    b.HasKey("CardFooterItemId");

                    b.HasIndex("CardFooterId");

                    b.ToTable("CardFooterItem");
                });

            modelBuilder.Entity("CompanyProjectCardsService.Model.CardHeader", b =>
                {
                    b.Property<Guid>("CardHeaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CardHeaderForeignKey")
                        .HasColumnType("uuid");

                    b.Property<string>("CardHeaderIcon")
                        .HasColumnType("text");

                    b.Property<bool>("CardHeaderIsLink")
                        .HasColumnType("boolean");

                    b.Property<string>("CardHeaderLinkAddress")
                        .HasColumnType("text");

                    b.Property<string>("CardHeaderTitle")
                        .HasColumnType("text");

                    b.HasKey("CardHeaderId");

                    b.HasIndex("CardHeaderForeignKey")
                        .IsUnique();

                    b.ToTable("CardHeader");
                });

            modelBuilder.Entity("CompanyProjectCardsService.Model.CardFooter", b =>
                {
                    b.HasOne("CompanyProjectCardsService.Model.Card", "Card")
                        .WithOne("CardFooter")
                        .HasForeignKey("CompanyProjectCardsService.Model.CardFooter", "CardFooterForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });

            modelBuilder.Entity("CompanyProjectCardsService.Model.CardFooterItem", b =>
                {
                    b.HasOne("CompanyProjectCardsService.Model.CardFooter", null)
                        .WithMany("CardFooterItems")
                        .HasForeignKey("CardFooterId");
                });

            modelBuilder.Entity("CompanyProjectCardsService.Model.CardHeader", b =>
                {
                    b.HasOne("CompanyProjectCardsService.Model.Card", "Card")
                        .WithOne("CardHeader")
                        .HasForeignKey("CompanyProjectCardsService.Model.CardHeader", "CardHeaderForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });

            modelBuilder.Entity("CompanyProjectCardsService.Model.Card", b =>
                {
                    b.Navigation("CardFooter");

                    b.Navigation("CardHeader");
                });

            modelBuilder.Entity("CompanyProjectCardsService.Model.CardFooter", b =>
                {
                    b.Navigation("CardFooterItems");
                });
#pragma warning restore 612, 618
        }
    }
}
